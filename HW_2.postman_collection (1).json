{
	"info": {
		"_postman_id": "95cee4f7-a83b-4f67-acb5-f21c23f90889",
		"name": "HW_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20770630"
	},
	"item": [
		{
			"name": "2. user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//http://162.55.220.72:5005/user_info_3\r",
							"//1. Отправить запрос.\r",
							"\r",
							"//2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//3. Спарсить response body в json.\r",
							"\r",
							"let jsonData = pm.response.json();\r",
							"//console.log(\"jsonData--\", jsonData)\r",
							"let resp_name = jsonData.name;\r",
							"let resp_age = jsonData.age;\r",
							"let resp_salary = jsonData.salary;\r",
							"let resp_family = jsonData.family;\r",
							"let resp_u_salary_1_5_year = jsonData.family.u_salary_1_5_year;\r",
							"console.log (resp_u_salary_1_5_year);\r",
							"//4. Проверить, что name в ответе равно name s request (name вбить руками.)\r",
							"\r",
							"//snippet Responce body: JSON value check\r",
							"\r",
							"pm.test(\"Check name\", function () {\r",
							"    pm.expect(resp_name).to.eql(\"Anna\");\r",
							"});\r",
							"\r",
							"//5. Проверить, что age в ответе равно age s request (age вбить руками.)\r",
							"pm.test(\"Check age\", function () {\r",
							"    pm.expect(resp_age).to.eql(\"40\");\r",
							"});\r",
							"\r",
							"//6. Проверить, что salary в ответе равно salary s request (salary вбить руками.)\r",
							"pm.test(\"Check salary\", function () {\r",
							"    pm.expect(resp_salary).to.eql(500);\r",
							"});\r",
							"\r",
							"//console.log(\"check parameters from response: resp_name resp_age, resp_salary --\", resp_name,resp_age,resp_salary )\r",
							"\r",
							"//7. Спарсить request.\r",
							"let req = request.data;\r",
							"let req_name = req.name;\r",
							"let req_age = req.age;\r",
							"let req_salary = req.salary;\r",
							"let req_salary_1_5 = req.salary*4;\r",
							"console.log(\"req_salary--\", req_salary )\r",
							"//8. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"Check name from req\", function () {\r",
							"    pm.expect(resp_name).to.eql(req_name);\r",
							"});\r",
							"console.log(\"req_name from req--\", req_name )\r",
							"\r",
							"//9. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"Check age from req\", function () {\r",
							"    pm.expect(resp_age).to.eql(req_age);\r",
							"});\r",
							"console.log(\"req_age from req--\", req_age )\r",
							"\r",
							"//10. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"Check salary from req\", function () {\r",
							"    pm.expect(resp_salary).to.eql(+req_salary);\r",
							"});\r",
							"console.log(\"req_salary from req--\", req_salary )\r",
							"//console.log(\"check parameters from req: req_name, req_age, req_salary --\", req_name,req_age,req_salary )\r",
							"\r",
							"//11. Вывести в консоль параметр family из response.\r",
							"console.log(\"family from response\", resp_family )\r",
							"\r",
							"//12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"pm.test(\"Check u_salary_1_5_year\", function () {\r",
							"    pm.expect(resp_u_salary_1_5_year).to.eql(req_salary_1_5);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Anna",
							"type": "text"
						},
						{
							"key": "age",
							"value": "40",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "500",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "3. object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//http://162.55.220.72:5005/object_info_3\r",
							"//1. Отправить запрос.\r",
							"//2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//3. Спарсить response body в json.\r",
							"let jsonData = pm.response.json();\r",
							"console.log(\"jsonData--\", jsonData )\r",
							"let resp_name = jsonData.name;\r",
							"let resp_age = jsonData.age;\r",
							"let resp_salary = jsonData.salary;\r",
							"let resp_family = jsonData.family;\r",
							"let resp_dog = jsonData.family.pets.dog;\r",
							"console.log(\"resp_dog--\", resp_dog )\r",
							"\r",
							"//4. Спарсить request.\r",
							"let req = pm.request.url.query.toObject();\r",
							"//console.log(\"req--\", req )\r",
							"let req_name = req.name;\r",
							"let req_age = req.age;\r",
							"let req_salary = req.salary;\r",
							"\r",
							"\r",
							"//5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"Check name from req\", function () {\r",
							"    pm.expect(resp_name).to.eql(req_name);\r",
							"});\r",
							"console.log(\"req_name from req--\", req_name )\r",
							"\r",
							"//6. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"Check age from req\", function () {\r",
							"    pm.expect(resp_age).to.eql(req_age);\r",
							"});\r",
							"console.log(\"req_age from req--\", req_age )\r",
							"\r",
							"//7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"Check salary from req\", function () {\r",
							"    pm.expect(resp_salary).to.eql(500);\r",
							"});\r",
							"\r",
							"//8. Вывести в консоль параметр family из response.\r",
							"console.log(\"family from response\", resp_family )\r",
							"\r",
							"//9. Проверить, что у параметра dog есть параметры name.\r",
							"pm.test(\"Check name in dog\", function () {\r",
							"    //pm.expect(JSON.stringify(resp_dog)).to.include(\"name\")\r",
							"//ИЛИ\r",
							"    pm.expect(jsonData.family.pets.dog).to.have.property(\"name\")\r",
							"});\r",
							"\r",
							"//10. Проверить, что у параметра dog есть параметры age.\r",
							"pm.test(\"Check age in dog\", function () {\r",
							"    pm.expect(JSON.stringify(resp_dog)).to.include(\"age\")\r",
							"});\r",
							"\r",
							"//11. Проверить, что параметр name имеет значение Luky.\r",
							"pm.test(\"Check dog_name\", function () {\r",
							"   pm.expect(resp_dog.name).to.eql(\"Luky\")\r",
							"});\r",
							"\r",
							"//12. Проверить, что параметр age имеет значение 4.\r",
							"pm.test(\"Check dog_age\", function () {\r",
							"    pm.expect(resp_dog.age).to.eql(4)\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Anna&age=40&salary=500",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Anna"
						},
						{
							"key": "age",
							"value": "40"
						},
						{
							"key": "salary",
							"value": "500"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "4. object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//http://162.55.220.72:5005/object_info_4\r",
							"//1. Отправить запрос.\r",
							"//2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//3. Спарсить response body в json.\r",
							"let jsonData = pm.response.json();\r",
							"console.log(\"jsonData--\", jsonData )\r",
							"let resp_name = jsonData.name;\r",
							"let resp_age = jsonData.age;\r",
							"let resp_salary = jsonData.salary;\r",
							"\r",
							"//4. Спарсить request.\r",
							"let req = pm.request.url.query.toObject();\r",
							"//console.log(\"req--\", req )\r",
							"let req_name = req.name;\r",
							"let req_age = req.age;\r",
							"let req_salary = req.salary;\r",
							"\r",
							"//5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"Check name from req\", function () {\r",
							"    pm.expect(resp_name).to.eql(req_name);\r",
							"});\r",
							"console.log(\"req_name from req--\", req_name )\r",
							"\r",
							"//6. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"Check age from req\", function () {\r",
							"    pm.expect(resp_age).to.eql(+req_age);\r",
							"});\r",
							"console.log(\"req_age from req--\", req_age )\r",
							"\r",
							"//7. Вывести в консоль параметр salary из request.\r",
							"console.log(\"salary from request\", req_salary )\r",
							"\r",
							"//8. Вывести в консоль параметр salary из response.\r",
							"console.log(\"salary from response\", resp_salary )\r",
							"\r",
							"//9. Вывести в консоль 0-й элемент параметра salary из response.\r",
							"console.log(\"salary_0 from response\", resp_salary[0] )\r",
							"\r",
							"//10. Вывести в консоль 1-й элемент параметра salary параметр salary из response.\r",
							"console.log(\"salary_1 from response\", resp_salary[1] )\r",
							"\r",
							"//11. Вывести в консоль 2-й элемент параметра salary параметр salary из response.\r",
							"console.log(\"salary_2 from response\", resp_salary[2] )\r",
							"\r",
							"//12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)\r",
							"pm.test(\"Check salary_0 = req_salary\", function () {\r",
							"    pm.expect(resp_salary[0]).to.eql(+req_salary);\r",
							"});\r",
							"\r",
							"//13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)\r",
							"pm.test(\"Check salary [1] equal req_salary*2\", function () {\r",
							"    pm.expect(resp_salary[1]).to.eql(String (req_salary*2));\r",
							"});\r",
							"\r",
							"//14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)\r",
							"pm.test(\"Check salary [2] equal req_salary*3\", function () {\r",
							"   pm.expect(resp_salary[2]).to.eql(String (req_salary*3));\r",
							"});\r",
							"\r",
							"//15. Создать в окружении переменную name\r",
							"//16. Создать в окружении переменную age\r",
							"//17. Создать в окружении переменную salary\r",
							"pm.environment.set(\"name\", req.name);\r",
							"pm.environment.set(\"age\", req.age);\r",
							"pm.environment.set(\"salary\", req.salary);\r",
							"console.log (\"environment:  \",req.name, req.age, req.salary )\r",
							"\r",
							"//18. Передать в окружение переменную name\r",
							"//19. Передать в окружение переменную age\r",
							"//20. Передать в окружение переменную salary\r",
							"//pm.environment.get(\"name\");\r",
							"//pm.environment.get(\"age\");\r",
							"//pm.environment.get(\"salary\");\r",
							"\r",
							"//21. Написать цикл который выведет в консоль по порядку элементы списка из параметра salary. \r",
							"//resp_salary.forEach((item) => {console.log(item)});\r",
							"//ИЛИ\r",
							"for (let i = 0; \r",
							"         i < jsonData.salary.length;\r",
							"         i++) {\r",
							"    console.log (resp_salary[i])\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Anna&age=40&salary=500",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Anna"
						},
						{
							"key": "age",
							"value": "40"
						},
						{
							"key": "salary",
							"value": "500"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "1. first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//http://162.55.220.72:5005/first\r",
							"//1. Отправить запрос.\r",
							"//2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//3. Проверить, что в body приходит правильный string.\r",
							"pm.test(\"Check string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");\r",
							"});\r",
							"\r",
							"// можно использовать to.eql вместо to.include\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5007/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5007",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "5. user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//http://162.55.220.72:5005/user_info_2\r",
							"//1. Вставить параметр salary из окружения в request\r",
							"//2. Вставить параметр age из окружения в request\r",
							"//3. Вставить параметр name из окружения в request\r",
							"//4. Отправить запрос.\r",
							"\r",
							"//5. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//6. Спарсить response body в json.\r",
							"let jsonData = pm.response.json();\r",
							"console.log(\"jsonData--\", jsonData );\r",
							"let resp_start_qa_salary = jsonData.start_qa_salary;\r",
							"let resp_qa_salary_after_6_months = jsonData.qa_salary_after_6_months;\r",
							"let resp_qa_salary_after_12_months = jsonData.qa_salary_after_12_months;\r",
							"let resp_qa_salary_after_1_5_year = jsonData[\"qa_salary_after_1.5_year\"];\r",
							"let resp_qa_salary_after_3_5_year = jsonData[\"qa_salary_after_3.5_years\"];\r",
							"let resp_person = jsonData.person;\r",
							"console.log(\"resp_person--\", resp_person );\r",
							"let resp_person_u_name_1 = jsonData.person.u_name[1];\r",
							"let resp_u_age = jsonData.person.u_age;\r",
							"let resp_u_salary_5_years = jsonData.person.u_salary_5_years;\r",
							"\r",
							"//7. Спарсить request.\r",
							"//let req = pm.request.url.query.toObject();\r",
							"let req = request.data;\r",
							"console.log(\"req--\", req )\r",
							"let req_name = req.name;\r",
							"let req_age = req.age;\r",
							"let req_salary = req.salary;\r",
							"\r",
							"//8. Проверить, что json response имеет параметр start_qa_salary\r",
							"pm.test(\"Check json response has start_qa_salary\", function () {\r",
							"    pm.expect(JSON.stringify(jsonData)).to.include(\"start_qa_salary\")\r",
							"});\r",
							"\r",
							"//9. Проверить, что json response имеет параметр qa_salary_after_6_months\r",
							"pm.test(\"Check json response has qa_salary_after_6_months\", function () {\r",
							"    pm.expect(JSON.stringify(jsonData)).to.include(\"qa_salary_after_6_months\")\r",
							"});\r",
							"\r",
							"//10. Проверить, что json response имеет параметр qa_salary_after_12_months\r",
							"pm.test(\"Check json response has qa_salary_after_12_months\", function () {\r",
							"    pm.expect(JSON.stringify(jsonData)).to.include(\"qa_salary_after_12_months\")\r",
							"});\r",
							"\r",
							"//11. Проверить, что json response имеет параметр qa_salary_after_1.5_year\r",
							"pm.test(\"Check json response has qa_salary_after_1.5_year\", function () {\r",
							"    pm.expect(JSON.stringify(jsonData)).to.include(\"qa_salary_after_1.5_year\")\r",
							"});\r",
							"\r",
							"//12. Проверить, что json response имеет параметр qa_salary_after_3.5_years\r",
							"pm.test(\"Check json response has qa_salary_after_3.5_year\", function () {\r",
							"    //pm.expect(JSON.stringify(jsonData)).to.include(\"qa_salary_after_3.5_year\")\r",
							"});\r",
							"\r",
							"//13. Проверить, что json response имеет параметр person\r",
							"pm.test(\"Check json response contains person\", function () {\r",
							"    pm.expect(JSON.stringify(jsonData)).to.include(\"person\")\r",
							"});\r",
							"\r",
							"//14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)\r",
							"pm.test(\"Check start_qa_salary is equal to req_salary\", function () {\r",
							"    pm.expect(String (resp_start_qa_salary)).to.eql(req_salary);\r",
							"});\r",
							"console.log(\"req_salary--\", req_salary )\r",
							"console.log(\"resp_start_qa_salary--\", resp_start_qa_salary )\r",
							"\r",
							"//15. Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)\r",
							"pm.test(\"Check qa_salary_after_6_months is equal to salary*2\", function () {\r",
							"    pm.expect(resp_qa_salary_after_6_months).to.eql(req_salary*2);\r",
							"});\r",
							"console.log(\"req_salary*2--\", req_salary*2 )\r",
							"console.log(\"resp_qa_salary_after_6_months--\", resp_qa_salary_after_6_months )\r",
							"\r",
							"//16. Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)\r",
							"pm.test(\"Check qa_salary_after_12_months is equal to salary*2.7\", function () {\r",
							"    pm.expect(resp_qa_salary_after_12_months).to.eql(req_salary*2.7);\r",
							"});\r",
							"console.log(\"req_salary*2.7--\", req_salary*2.7 )\r",
							"console.log(\"resp_qa_salary_after_12_months--\", resp_qa_salary_after_12_months )\r",
							"\r",
							"//17. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)\r",
							"pm.test(\"Check qa_salary_after_1.5_year is equal to salary*3.3\", function () {\r",
							"    pm.expect(resp_qa_salary_after_1_5_year).to.eql(req_salary*3.3);\r",
							"});\r",
							"console.log(\"req_salary*3.3--\", req_salary*3.3 )\r",
							"console.log(\"resp_qa_salary_after_after_1_5_year--\", resp_qa_salary_after_1_5_year )\r",
							"\r",
							"//18. Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)\r",
							"pm.test(\"Check qa_salary_after_3.5_year is equal to salary*3.8\", function () {\r",
							"    pm.expect(resp_qa_salary_after_3_5_year).to.eql(req_salary*3.8);\r",
							"});\r",
							"console.log(\"req_salary*3.8--\", req_salary*3.8 )\r",
							"console.log(\"resp_qa_salary_after_3_5_years--\", resp_qa_salary_after_3_5_year)\r",
							"\r",
							"//19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)\r",
							"pm.test(\"Check person u_name[1] equal req_salary\", function () {\r",
							"    pm.expect(String (resp_person.u_name[1])).to.eql(req_salary);\r",
							"});\r",
							"console.log(\"resp_person.u_name[1]--\", resp_person_u_name_1 )\r",
							"console.log(\"req_salary-\", req_salary)\r",
							"\r",
							"//20. Проверить, что что параметр u_age равен age из request (age забрать из request.)\r",
							"pm.test(\"Check person u_age equal req_age\", function () {\r",
							"    pm.expect(String(resp_u_age)).to.eql(req_age);\r",
							"});\r",
							"console.log(\"resp_u_age--\", resp_u_age )\r",
							"console.log(\"req_age--\", req_age)\r",
							"\r",
							"//21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)\r",
							"pm.test(\"Check u_salary_5_years is equal to salary*4.2\", function () {\r",
							"    pm.expect(resp_u_salary_5_years).to.eql(req_salary*4.2);\r",
							"});\r",
							"console.log(\"req_salary*4.2--\", req_salary*4.2 )\r",
							"console.log(\"resp_u_salary_5_years--\", resp_u_salary_5_years )\r",
							"\r",
							"//22. ***Написать цикл который выведет в консоль по порядку элементы списка из параметра person.\r",
							"for (let i in jsonData.person)\r",
							"console.log(jsonData.person[i]);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Status code is 200\", function () {",
					"    pm.response.to.have.status(200);",
					"});"
				]
			}
		}
	]
}